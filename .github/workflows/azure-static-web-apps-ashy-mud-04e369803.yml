name: Azure Static Web Apps CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main

jobs:
  build_and_deploy_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    permissions:
       id-token: write
       contents: read
    steps:
      # Check for data-only commits to skip deployment
      - name: Check for data-only commit
        id: check_commit
        run: |
          if [[ "${{ github.event.head_commit.message }}" == *"[data-only]"* ]]; then
            echo "skip=true" >> $GITHUB_OUTPUT
            echo "⏭️ Skipping deployment - data-only commit detected"
            echo "Commit message: ${{ github.event.head_commit.message }}"
          else
            echo "skip=false" >> $GITHUB_OUTPUT
            echo "🚀 Proceeding with deployment - code changes detected"
          fi
      
      - uses: actions/checkout@v3
        if: steps.check_commit.outputs.skip == 'false'
        with:
          submodules: true
          lfs: false
      
      - name: Install dependencies and build (Vite)
        if: steps.check_commit.outputs.skip == 'false'
        run: |
          cd client
          npm install
          npm run build
        # Ensure build output ends up in ../dist as configured in vite.config.ts
        
      - name: Install OIDC Client from Core Package
        if: steps.check_commit.outputs.skip == 'false'
        run: npm install @actions/core@1.6.0 @actions/http-client
      - name: Get Id Token
        if: steps.check_commit.outputs.skip == 'false'
        uses: actions/github-script@v6
        id: idtoken
        with:
           script: |
               const coredemo = require('@actions/core')
               return await coredemo.getIDToken()
           result-encoding: string
      - name: Build And Deploy
        if: steps.check_commit.outputs.skip == 'false'
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_ASHY_MUD_04E369803 }}
          action: "upload"
          ###### Repository/Build Configurations - These values can be configured to match your app requirements. ######
          # For more information regarding Static Web App workflow configurations, please visit: https://aka.ms/swaworkflowconfig
          app_location: "dist/public" # App source code path
          api_location: "functions" # Api source code path - optional
          output_location: "" # Built app content directory - optional
          github_id_token: ${{ steps.idtoken.outputs.result }}
          skip_app_build: true # We're building manually above
          ###### End of Repository/Build Configurations ######

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          action: "close"
