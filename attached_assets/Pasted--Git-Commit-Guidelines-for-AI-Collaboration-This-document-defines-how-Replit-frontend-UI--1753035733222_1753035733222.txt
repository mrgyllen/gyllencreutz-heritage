# 🤝 Git Commit Guidelines for AI Collaboration

This document defines how **Replit** (frontend/UI) and **Claude** (backend/logic) should write all Git commit messages to ensure clarity, traceability, and consistency across the shared project.

---

## ✅ Commit Format

Each commit message should follow this format:

<type>(AI): <short description of what changed>


Where:
- `<type>` defines the nature of the change (see table below)
- `(AI)` is either `(Replit)` or `(Claude)` depending on who made the change
- `<short description>` summarizes the change

---

## 🔠 Commit Types

| Type      | Use For                                                                  |
|-----------|--------------------------------------------------------------------------|
| `feat`    | New features or capabilities                                             |
| `fix`     | Bug fixes or logic corrections                                           |
| `refactor`| Code restructuring that doesn't change functionality                     |
| `docs`    | Changes to markdown files, documentation, or code comments               |
| `chore`   | Non-code changes like build scripts, package updates, config cleanup     |
| `test`    | Adding, updating, or fixing test logic                                   |
| `style`   | Visual/UI changes (components, CSS, layout, fonts, etc.) ← **Replit only**

---

## 🔁 AI Responsibility

- **Replit** focuses on `style`, `docs`, and sometimes `feat`, `chore`, or `test`
- **Claude** focuses on `feat`, `fix`, `refactor`, `test`, `docs`, and `chore`

---

## 📦 Examples

### Claude

docs(Claude): update backend API shape in architecture-guidelines.md
feat(Claude): add /api/family-tree endpoint with dynamic data loader
fix(Claude): correct file path in Azure Function
refactor(Claude): restructure storage module for clarity


### Replit

style(Replit): update button hover effect and spacing
docs(Replit): add new design rules for navigation bar
feat(Replit): implement expandable timeline component
chore(Replit): upgrade TailwindCSS to latest version


---

## 📘 Notes

- Use clear, lowercase `<type>` values only from the table above.
- Be concise but descriptive — keep the summary under 72 characters.
- All AI-generated changes **must be committed with this format**.
- When in doubt, default to `chore`.

---

_Last updated: 2025-07-20_